{"README.md":"\n> 이 페이지를 [https://xlevel75.github.io/iottest/](https://xlevel75.github.io/iottest/)으로 열기\n\n## 확장으로 사용\n\n이 저장소는 MakeCode에서 **확장**으로 추가될 수 있습니다.\n\n* [https://makecode.microbit.org/](https://makecode.microbit.org/) 열기\n* **새로운 프로젝트**에서 클릭\n* 톱니바퀴 모양 메뉴에서 **확장**을 클릭합니다\n* **https://github.com/xlevel75/iottest**으로 검색하고 가져오기\n\n## 이 프로젝트 편집\n\nMakeCode에서 이 저장소를 편집합니다.\n\n* [https://makecode.microbit.org/](https://makecode.microbit.org/) 열기\n* **가져오기**를 클릭한 다음 **가져오기 URL**를 클릭합니다\n* **https://github.com/xlevel75/iottest**를 붙여넣고 가져오기를 클릭하세요.\n\n#### 메타데이터(검색, 렌더링에 사용)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"></xml>","main.ts":"\r\nnamespace AIoT {\r\n\r\nlet mscnt = 0\r\nlet recvString = \"\"\r\nlet TStoSendStr = \"\"\r\n\r\nfunction sendAT(command: string, wait: number = 0) {\r\n    serial.writeString(`${command}\\u000D\\u000A`)\r\n    basic.pause(wait)\r\n}\r\nexport function uploadData() {\r\n    sendAT(TStoSendStr, 100)\r\n    while (1) {\r\n        recvString = \"\" + recvString + serial.readString()\r\n        basic.pause(1)\r\n        mscnt += 1\r\n        if (recvString.includes(\"OK\")) {\r\n            //basic.showString(\"upload ok\")\r\n            break;\r\n        }\r\n        if (mscnt >= 500) {\r\n            //basic.showString(\"timeout\")\r\n            break;\r\n        }\r\n        if (recvString.includes(\"ERROR\")) {\r\n            //basic.showString(\"upload error\")\r\n            break;\r\n        }\r\n    }\r\n    recvString = \" \"\r\n    basic.pause(200)\r\n}\r\nexport function setData(write_api_key: string, n1: number = 0, n2: number = 0, n3: number = 0, n4: number = 0, n5: number = 0, n6: number = 0, n7: number = 0, n8: number = 0)\r\n{\r\n    TStoSendStr = \"AT+HTTPCLIENT=2,0,\\\"http://api.thingspeak.com/update?api_key=\"\r\n        + write_api_key + \"&field1=\" + n1 + \"&field2=\" + n2 + \"&field3=\" + n3 + \"&field4=\" + n4 + \"&field5=\" + n5 + \"&field6=\" + n6 + \"&field7=\" + n7 + \"&field8=\" + n8\r\n        + \"\\\",,,1\"\r\n}\r\nexport function setGoogleData(n1: number = 0, n2: number = 0, n3: number = 0, n4: number = 0) \r\n{   TStoSendStr = \"AT+HTTPCLIENT=2,0,\\\"https://script.google.com/macros/s/AKfycbxyqd9J-kKcGrBqnon3XGHomYaRLoKVLxUqErWafPweHA05HWJwYVGquzSUVl8bAsjRHw/exec?\"        \r\n        + \"&field1=\" + n1 + \"&field2=\" + n2 + \"&field3=\" + n3 + \"&field4=\" + n4\r\n        + \"\\\",,,1\"\r\n}\r\nexport function SendGoogleDefault() {\r\n    let vlight = input.lightLevel()\r\n    let vtemperature = input.temperature()\r\n    let vaccelX = input.acceleration(Dimension.X)\r\n    let vsound = input.soundLevel();\r\n\r\n    setGoogleData(vlight, vtemperature, vaccelX, vsound);\r\n    uploadData()\r\n}\r\n\r\nexport function SendGoogleData(n1: number = 0, n2: number = 0, n3: number = 0, n4: number = 0 ) {\r\n    setGoogleData(n1, n2, n3, n4);\r\n    uploadData()\r\n}\r\n\r\n}\r\n\r\n// basic.showString(\"start!\")\r\n\r\n// ESP8266_IoT.initWIFI(SerialPin.P8, SerialPin.P12, BaudRate.BaudRate115200)\r\n// ESP8266_IoT.connectWifi(\"AOffice\", \"88888888\")\r\n\r\n// if (ESP8266_IoT.wifiState(true)) {\r\n//     basic.showString(\"C\")\r\n//     basic.pause(1000)\r\n\r\n//     let count = 0;\r\n\r\n//     while (ESP8266_IoT.wifiState(true)) {\r\n//         AIoT.SendGoogleData();\r\n//         basic.pause(500)\r\n//         ++count;\r\n//         //basic.showNumber(count);        \r\n//         basic.showString(\"!\" + count )\r\n//     }\r\n\r\n// } else {\r\n//     basic.showString(\"N\")\r\n// }\r\n\r\n","pxt.json":"{\n    \"name\": \"iottest\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"Environment-and-Science-IoT\": \"github:tinkertanker/pxt-iot-environment-kit#v5.2.7\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"6.0.28\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n","test.ts":"// 테스트는 여기로 이동합니다; 이 패키지가 확장으로 사용될 때 컴파일되지 않을 것 입니다.\n"}